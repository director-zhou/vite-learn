(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{370:function(s,t,o){"use strict";o.r(t);var r=o(45),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,o=s._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[o("h2",{attrs:{id:"一-为了解决-commonjs-和-umd-兼容性问题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一-为了解决-commonjs-和-umd-兼容性问题"}},[s._v("#")]),s._v(" （一） 为了解决 CommonJS 和 UMD 兼容性问题")]),s._v(" "),o("p",[o("strong",[s._v("CommonJS")]),s._v(" 和 "),o("strong",[s._v("UMD")]),s._v(" 兼容性: 开发阶段中，"),o("strong",[s._v("Vite")]),s._v(" 的开发服务器将所有代码视为原生 "),o("strong",[s._v("ES")]),s._v(" 模块。因此，"),o("strong",[s._v("Vite")]),s._v(" 必须先将作为 "),o("strong",[s._v("CommonJS")]),s._v(" 或 "),o("strong",[s._v("UMD")]),s._v(" 发布的依赖项转换为 "),o("strong",[s._v("ESM")]),s._v("。")]),s._v(" "),o("h2",{attrs:{id:"什么是-esm"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是-esm"}},[s._v("#")]),s._v(" 什么是 ESM")]),s._v(" "),o("p",[o("strong",[s._v("ES-Module")]),s._v(" 简称为 "),o("strong",[s._v("ESM")]),s._v(", "),o("strong",[s._v("ESM")]),s._v(" 是浏览器原生支持模块功能, 浏览器能够最优化加载模块，使它比使用库更有效率：使用库通常需要做额外的客户端处理。")]),s._v(" "),o("blockquote",[o("p",[s._v("使用方式")])]),s._v(" "),o("p",[s._v("使用的方式与通常的"),o("code",[s._v("<script>")]),s._v("加载的机制一样, 但唯一的区别在于需在"),o("code",[s._v("<script>")]),s._v("起始标签加一个"),o("code",[s._v('type="module"')]),s._v("的属性, 这样就可以通过 "),o("code",[s._v("import")]),s._v("和 "),o("code",[s._v("export")]),s._v("这两个关健字进行模块化导入导出的管理。")]),s._v(" "),o("blockquote",[o("p",[s._v("错误引入方式")])]),s._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" HelloWorld "),o("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.js'")]),s._v("\n"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),o("p",[s._v("Uncaught SyntaxError: Cannot use import statement outside a module")]),s._v(" "),o("p",[s._v("提示报错:")]),s._v(" "),o("p",[s._v("想用import 和 export 方式进行模块化方式导入与导出需要在"),o("code",[s._v("<script>")]),s._v("标签加上 "),o("code",[s._v('type="module')])])]),s._v(" "),o("h2",{attrs:{id:"什么是commonjs"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是commonjs"}},[s._v("#")]),s._v(" 什么是CommonJS")]),s._v(" "),o("p",[o("strong",[s._v("CommonJS")]),s._v(" 简称为 "),o("strong",[s._v("CJS")])]),s._v(" "),o("p",[o("strong",[s._v("CommonJS")]),s._v(" 也是一种模块的形式, 其特性为: 核心思想是通过"),o("code",[s._v("require")]),s._v("方法来同步加载依赖的其他模块, 通过"),o("code",[s._v("module.exports")]),s._v("导出需要暴露的接口。")]),s._v(" "),o("p",[o("strong",[s._v("CommonJS")]),s._v(" 大多数用于Node.js环境下, 大多数"),o("code",[s._v("Npm")]),s._v("第三方模块采用了"),o("code",[s._v("CommonJS")]),s._v("规范, 但是这样的引入导出方式无法运行在浏览器环境下。")]),s._v(" "),o("blockquote",[o("p",[s._v("尝试在浏览器环境下引入CommonJS")])]),s._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),o("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" HelloWrold "),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),o("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.js'")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),o("p",[s._v("Uncaught ReferenceError: require is not defined")]),s._v(" "),o("p",[s._v("提示报错:")]),s._v(" "),o("p",[s._v("没有定义"),o("code",[s._v("require")]),s._v(", 浏览器并没有"),o("code",[s._v("require")]),s._v("方法, 所以不支持此方法")])]),s._v(" "),o("h2",{attrs:{id:"什么是umd"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是umd"}},[s._v("#")]),s._v(" 什么是UMD")]),s._v(" "),o("p",[s._v("由于 "),o("strong",[s._v("CommonJS")]),s._v(" 和 "),o("strong",[s._v("AMD")]),s._v(" 风格都同样流行，似乎还没有达成共识。这带来了对支持两种风格的"),o("code",[s._v("通用")]),s._v("模式的推动，这让我们想到了通用模块定义。")]),s._v(" "),o("p",[s._v("诚然，该模式很丑陋，但与 "),o("strong",[s._v("AMD")]),s._v(" 和 "),o("strong",[s._v("CommonJS")]),s._v(" 兼容，并且支持旧式的"),o("code",[s._v("全局")]),s._v("变量定义。")]),s._v(" "),o("blockquote",[o("p",[s._v("尝试在浏览器环境下引入umd")])]),s._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script type"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),o("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" dayjs "),o("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./node_modules/dayjs/dayjs.min.js'")]),s._v("\n"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),o("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),o("p",[s._v("Uncaught SyntaxError: The requested module '/node_modules/dayjs/dayjs.min.js?v=43ffb0a3' does not provide an export named 'default'")]),s._v(" "),o("p",[s._v("提示报错:")]),s._v(" "),o("p",[o("code",[s._v("node_modules")]),s._v("包中的"),o("code",[s._v("dayjs")]),s._v("是一个"),o("code",[s._v("umd")]),s._v("格式的包，通过"),o("code",[s._v("import")]),s._v("的方式进行在浏览器引入, 则会提示没有提供默认的导出名称")])]),s._v(" "),o("h2",{attrs:{id:"总结"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),o("p",[s._v("以上三种方式，可以得出只有通过"),o("code",[s._v('<script type="module"><\/script>')]),s._v("方式引入, 并且要符合 "),o("strong",[s._v("ESM")]),s._v(" 的导入导出规范, 浏览器才会符合预期效果进行模块加载, 其余的 "),o("strong",[s._v("CommonJS")]),s._v(" 规范还是 "),o("strong",[s._v("UMD")]),s._v(" 规范, 浏览器都不能进行识别。")]),s._v(" "),o("p",[s._v("所以 "),o("strong",[s._v("Vite")]),s._v(" 进行对模块的预构建也是同样的道理, 市面上的 "),o("strong",[s._v("NPM")]),s._v(" 包大多数都是 "),o("strong",[s._v("CommonJS")]),s._v(" 和 "),o("strong",[s._v("UMD")]),s._v(" 的模块, 为了能很好的使用市场的 "),o("strong",[s._v("NPM")]),s._v("包, 通过预构建把 "),o("strong",[s._v("CommonJS")]),s._v(" 和 "),o("strong",[s._v("UMD")]),s._v(" 的包转化为 "),o("strong",[s._v("ESM")]),s._v(" 的导入导出方式, 这样浏览器就可以进行模块加载。")])])}),[],!1,null,null,null);t.default=e.exports}}]);